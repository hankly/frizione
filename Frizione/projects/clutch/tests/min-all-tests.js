
if(!this.clutch){clutch={};}
clutch.date={toStandardJSON:function(){function tens(n){return n<10?'0'+n:n;}
function hundreds(n){return n<100?'0'+tens(n):n;}
Date.prototype.toJSON=function(){return this.getUTCFullYear()+'-'+
tens(this.getUTCMonth()+1)+'-'+
tens(this.getUTCDate())+'T'+
tens(this.getUTCHours())+':'+
tens(this.getUTCMinutes())+':'+
tens(this.getUTCSeconds())+'.'+
hundreds(this.getUTCMilliseconds())+'Z';};},toMicrosoftJSON:function(){Date.prototype.toJSON=function(){return"\\/Date("+this.getTime()+")\\/";};},toClutchJSON:function(){function tens(n){return n<10?'0'+n:n;}
function hundreds(n){return n<100?'0'+tens(n):n;}
Date.prototype.toJSON=function(){return"\\/Date("+
this.getUTCFullYear()+'-'+
tens(this.getUTCMonth()+1)+'-'+
tens(this.getUTCDate())+'T'+
tens(this.getUTCHours())+':'+
tens(this.getUTCMinutes())+':'+
tens(this.getUTCSeconds())+'.'+
hundreds(this.getUTCMilliseconds())+'Z'+")\\/";};},evalJSON:function(){if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){var microsoftDate=new RegExp("^\\\\\\/Date\\((\\d+)\\)\\\\\\/$","gm");var clutchDate=new RegExp("^\\\\\\/Date\\((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?Z\\)\\\\\\/$","gm");String.prototype.evalJSON=function(sanitize){var json=this.unfilterJSON();try{if(!sanitize||json.isJSON()){json=json.replace(microsoftDate,function(str,p1,offset,s){return"new Date("+p1+")";});json=json.replace(clutchDate,function(str,p1,p2,p3,p4,p5,p6,p7,offset,s){var millis=p7||".0";millis=millis.slice(1);return"new Date(Date.UTC("+(+p1)+", "+(+p2-1)+", "+(+p3)+", "+(+p4)+", "+(+p5)+", "+(+p6)+", "+(+millis)+"))";});return new Function('return ('+json+');')();}}catch(e){}
throw new SyntaxError('Badly formed JSON string: '+this.inspect());};}}};clutch.string={trim:function(string){return string.replace(/^[\s\u00a0]+/,'').replace(/[\s\u00a0]+$/,'');},startsWith:function(string,match){return string.indexOf(match)===0;},endsWith:function(string,match){var offset=string.length-match.length;return offset>=0&&string.lastIndexOf(match)===offset;},toJSON:function(object){if(Object.toJSON&&typeof Object.toJSON==='function'){return Object.toJSON(object);}
else{return JSON.stringify(object);}},fromJSON:function(string){if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){return string.evalJSON(true);}
else{var microsoftDate=new RegExp("^\\\\\\/Date\\((\\d+)\\)\\\\\\/$","gm");var clutchDate=new RegExp("^\\\\\\/Date\\((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?Z\\)\\\\\\/$","gm");return JSON.parse(string,function(key,value){var match,millis;if(typeof value==='string'){match=microsoftDate.exec(value);if(match){return new Date(+match[1]);}
else{match=clutchDate.exec(value);if(match){millis=match[7]||".0";millis=match[7].slice(1);return new Date(Date.UTC(+match[1],+match[2]-1,+match[3],+match[4],+match[5],+match[6],+millis));}}}
return value;});}}};if(!this.clutch){clutch={};}
clutch.gearsFactory=function(){return google.gears.factory;};clutch.createGearsDatabase=function(){return google.gears.factory.create('beta.database');};clutch.createGearsDesktop=function(){return google.gears.factory.create('beta.desktop');};clutch.createGearsHttpRequest=function(){return google.gears.factory.create('beta.httprequest');};clutch.createGearsLocalServer=function(){return google.gears.factory.create('beta.localserver');};clutch.createGearsTimer=function(){return google.gears.factory.create('beta.timer');};clutch.createGearsWorkerPool=function(){return google.gears.factory.create('beta.workerpool');};if(!this.clutch){clutch={};}
clutch.createRequest=function(){try{return clutch.createGearsHttpRequest();}
catch(e){try{return new XMLHttpRequest();}
catch(e1){try{return new ActiveXObject("Msxml2.XMLHTTP");}
catch(e2){try{return new ActiveXObject("Microsoft.XMLHTTP");}
catch(e3){}}}}
return null;};(function(){var clutchTimer=null;try{clutchTimer=clutch.createGearsTimer();clutch.setTimeout=function(code,millis){return clutchTimer.setTimeout(code,millis);};clutch.clearTimeout=function(timerId){clutchTimer.clearTimeout(timerId);};}
catch(e){clutch.setTimeout=function(code,millis){return window.setTimeout(code,millis);};clutch.clearTimeout=function(timerId){window.clearTimeout(timerId);};}})();clutch.executeRequest=function(method,url,optionalParams,optionalBody,handler){var REQUEST_TIMEOUT_MS=5000;var request=clutch.createRequest();var terminated=false;var timerId=clutch.setTimeout(function(){terminated=true;if(request){request.abort();request=null;}
handler(-1,"Timeout","Timeout");},REQUEST_TIMEOUT_MS);var n;var qmark="?";if(optionalParams){for(n in optionalParams){if(optionalParams.hasOwnProperty(n)){url+=qmark+n+"="+optionalParams[n];qmark="";}}}
try{request.onreadystatechange=function(){if(terminated){return;}
try{if(request.readyState===4){var status,statusText,responseText;try{status=request.status;statusText=request.statusText;responseText=request.responseText;}
catch(e1){}
terminated=true;request=null;clutch.clearTimeout(timerId);if(status===0){status=200;}
handler(status,statusText,responseText);}}
catch(e2){throw e2;}};request.open(method,url,true);request.send(optionalBody||null);return function(){if(request){terminated=true;request.abort();request=null;clutch.clearTimeout(timerId);}
handler(-1,"Aborted","Aborted");};}
catch(e){terminated=true;request=null;clutch.clearTimeout(timerId);clutch.setTimeout(handler,0);return function(){};}};function createStringTests(){return clutch.test.unit('String Tests',{testTrim:function(){var cs=clutch.string;var result=cs.trim(" \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="trimmed","clutch.string.trim()#1 failed \""+result+"\"");result=cs.trim(" \n\t\u00a0still \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="still \n\t\u00a0trimmed","clutch.string.trim()#2 failed \""+result+"\"");},testStartsWith:function(){var cs=clutch.string;var text="startsWith";var result=cs.startsWith(text,"start");this.assert(result,"clutch.string.startsWith()#1 failed");result=cs.startsWith(text,"end");this.assert(result===false,"clutch.string.startsWith()#2 failed");result=cs.startsWith(text,"");this.assert(result,"clutch.string.startsWith()#3 failed");result=cs.startsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.startsWith()#4 failed");},testEndsWith:function(){var cs=clutch.string;var text="endsWith";var result=cs.endsWith(text,"With");this.assert(result,"clutch.string.endsWith()#1 failed");result=cs.endsWith(text,"with");this.assert(result===false,"clutch.string.endsWith()#2 failed");result=cs.endsWith(text,"");this.assert(result,"clutch.string.endsWith()#3 failed");result=cs.endsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.endsWith()#4 failed");},testJsonObject:function(){var cs=clutch.string;var object={a:"hello",b:true,c:3.1,d:new Date(2008,5,25,22,30,1,123)};clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(object);var objectCopy=cs.fromJSON(resultJSON);this.assert(object.a===objectCopy.a,"clutch.string.to/fromJSON object string failed");this.assert(object.b===objectCopy.b,"clutch.string.to/fromJSON object boolean failed");this.assert(object.c===objectCopy.c,"clutch.string.to/fromJSON object numeric failed");this.assert(object.d.getTime()===objectCopy.d.getTime(),"clutch.string.to/fromJSON object Date failed");},testJsonArray:function(){var cs=clutch.string;var array=["hello",true,3.1,new Date(2008,5,25,22,30,1,123)];clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(array);var arrayCopy=cs.fromJSON(resultJSON);this.assert(array[0]===arrayCopy[0],"clutch.string.to/fromJSON array string failed");this.assert(array[1]===arrayCopy[1],"clutch.string.to/fromJSON array boolean failed");this.assert(array[2]===arrayCopy[2],"clutch.string.to/fromJSON array numeric failed");this.assert(array[3].getTime()===arrayCopy[3].getTime(),"clutch.string.to/fromJSON array Date failed");}},1000);}
function runClutchTests(){return createStringTests();}
function createUnitTests(){return clutch.test.unit('Assertion Tests',{clutchTests:[{func:'logTest',callbacks:null},{func:'passTest',callbacks:null},{func:'failTest',callbacks:null},{func:'errorTest',callbacks:null},{func:'assertTest',callbacks:null}],logTest:function(){this.log("Test log message");this.assert(true===true);},passTest:function(){this.pass();this.assert(true===true);},failTest:function(){this.fail("Test fail() call");this.assert(true===false,"assert(false) guaranteed to fail");},errorTest:function(){this.error(new Error("Test error() call"));},assertTest:function(){this.assert(true===true,"assert(true) shouldn't fail");}},1000);}
function runClutchTests(){return createUnitTests();}
function createXhrTests(){return clutch.test.unit('XHR Tests',{clutchTests:[{func:'validUrl',callbacks:['validUrlHandler']},{func:'invalidUrl',callbacks:['invalidUrlHandler']},{func:'abortedRequest',callbacks:['abortedRequestHandler']}],validUrl:function(){var abort=clutch.executeRequest("GET",'/projects/clutch/src/tests/gears/xhr-test-data.json',null,null,this.validUrlHandler);this.checkAbort(abort);},validUrlHandler:function(status,statusText,responseText){this.assert(status>=200&&status<=299,"Status not between 200 and 299");},invalidUrl:function(){var abort=clutch.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,this.invalidUrlHandler);this.checkAbort(abort);},invalidUrlHandler:function(status,statusText,responseText){this.assert(status>=400&&status<=499,"Status not between 400 and 499");},abortedRequest:function(){var abort=clutch.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,this.abortedRequestHandler);this.checkAbort(abort);abort();},abortedRequestHandler:function(status,statusText,responseText){this.assert(status===-1,"Status not -1");this.assert(statusText==='Aborted',"Status text not 'Aborted'");this.assert(responseText==='Aborted',"Response text not 'Aborted'");},checkAbort:function(abort){this.assert(abort!==null,"Returned value is null");this.assert(typeof abort==='function',"Returned value is not a function");}},18000);}
function runClutchTests(){return createXhrTests();}
function runClutchTests(){return clutch.test.group([createUnitTests(),createStringTests(),createXhrTests()],30000);}
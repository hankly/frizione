
if(!this.clutch){clutch={};}
clutch.date={toStandardJSON:function(){function tens(n){return n<10?'0'+n:n;}
function hundreds(n){return n<100?'0'+tens(n):n;}
Date.prototype.toJSON=function(){return this.getUTCFullYear()+'-'+
tens(this.getUTCMonth()+1)+'-'+
tens(this.getUTCDate())+'T'+
tens(this.getUTCHours())+':'+
tens(this.getUTCMinutes())+':'+
tens(this.getUTCSeconds())+'.'+
hundreds(this.getUTCMilliseconds())+'Z';};},toMicrosoftJSON:function(){Date.prototype.toJSON=function(){return"\\/Date("+this.getTime()+")\\/";};},toClutchJSON:function(){function tens(n){return n<10?'0'+n:n;}
function hundreds(n){return n<100?'0'+tens(n):n;}
Date.prototype.toJSON=function(){return"\\/Date("+
this.getUTCFullYear()+'-'+
tens(this.getUTCMonth()+1)+'-'+
tens(this.getUTCDate())+'T'+
tens(this.getUTCHours())+':'+
tens(this.getUTCMinutes())+':'+
tens(this.getUTCSeconds())+'.'+
hundreds(this.getUTCMilliseconds())+'Z'+")\\/";};},evalJSON:function(){if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){var microsoftDate=new RegExp("^\\\\\\/Date\\((\\d+)\\)\\\\\\/$","gm");var clutchDate=new RegExp("^\\\\\\/Date\\((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?Z\\)\\\\\\/$","gm");String.prototype.evalJSON=function(sanitize){var json=this.unfilterJSON();try{if(!sanitize||json.isJSON()){json=json.replace(microsoftDate,function(str,p1,offset,s){return"new Date("+p1+")";});json=json.replace(clutchDate,function(str,p1,p2,p3,p4,p5,p6,p7,offset,s){var millis=p7||".0";millis=millis.slice(1);return"new Date(Date.UTC("+(+p1)+", "+(+p2-1)+", "+(+p3)+", "+(+p4)+", "+(+p5)+", "+(+p6)+", "+(+millis)+"))";});return new Function('return ('+json+');')();}}catch(e){}
throw new SyntaxError('Badly formed JSON string: '+this.inspect());};}}};clutch.string={trim:function(string){return string.replace(/^[\s\u00a0]+/,'').replace(/[\s\u00a0]+$/,'');},startsWith:function(string,match){return string.indexOf(match)===0;},endsWith:function(string,match){var offset=string.length-match.length;return offset>=0&&string.lastIndexOf(match)===offset;},toJSON:function(object){if(Object.toJSON&&typeof Object.toJSON==='function'){return Object.toJSON(object);}
else{return JSON.stringify(object);}},fromJSON:function(string){if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){return string.evalJSON(true);}
else{var microsoftDate=new RegExp("^\\\\\\/Date\\((\\d+)\\)\\\\\\/$","gm");var clutchDate=new RegExp("^\\\\\\/Date\\((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?Z\\)\\\\\\/$","gm");return JSON.parse(string,function(key,value){var match,millis;if(typeof value==='string'){match=microsoftDate.exec(value);if(match){return new Date(+match[1]);}
else{match=clutchDate.exec(value);if(match){millis=match[7]||".0";millis=match[7].slice(1);return new Date(Date.UTC(+match[1],+match[2]-1,+match[3],+match[4],+match[5],+match[6],+millis));}}}
return value;});}}};if(!this.clutch){clutch={};}
clutch.isGearsInstalled=function(){if(!!window){return!!window.google&&!!google&&!!google.gears;}
else{return!!google&&!!google.gears;}};clutch.gearsFactory=function(){return google.gears.factory;};clutch.createGearsDatabase=function(){return google.gears.factory.create('beta.database');};clutch.createGearsDesktop=function(){return google.gears.factory.create('beta.desktop');};clutch.createGearsHttpRequest=function(){return google.gears.factory.create('beta.httprequest');};clutch.createGearsLocalServer=function(){return google.gears.factory.create('beta.localserver');};clutch.createGearsTimer=function(){return google.gears.factory.create('beta.timer');};clutch.createGearsWorkerPool=function(){return google.gears.factory.create('beta.workerpool');};if(!this.clutch){clutch={};}
if(!this.clutch.timer){clutch.timer={};}
(function(){var gearsTimer=null;if(!!this.window&&!!window.setTimeout){clutch.timer.setTimeout=function(code,millis){return window.setTimeout(code,millis);};clutch.timer.setInterval=function(code,millis){return window.setInterval(code,millis);};clutch.timer.clearTimeout=function(timerId){window.clearTimeout(timerId);};}
else{gearsTimer=clutch.createGearsTimer();clutch.timer.setTimeout=function(code,millis){return gearsTimer.setTimeout(code,millis);};clutch.timer.setInterval=function(code,millis){return gearsTimer.setInterval(code,millis);};clutch.timer.clearTimeout=function(timerId){gearsTimer.clearTimeout(timerId);};}})();if(!this.clutch){clutch={};}
if(!this.clutch.xhr){clutch.xhr={};}
clutch.xhr.createRequest=function(){try{return clutch.createGearsHttpRequest();}
catch(e){try{return new XMLHttpRequest();}
catch(e1){try{return new ActiveXObject("Msxml2.XMLHTTP");}
catch(e2){try{return new ActiveXObject("Microsoft.XMLHTTP");}
catch(e3){}}}}
return null;};clutch.xhr.executeRequest=function(method,url,optionalParams,optionalBody,timeout,handler){var requestTimeout=timeout||5000;var request=clutch.xhr.createRequest();var terminated=false;var timerId=clutch.timer.setTimeout(function(){terminated=true;if(request){request.abort();request=null;}
handler(-1,"Timeout","Timeout");},requestTimeout);var param;var qmark="?";if(optionalParams){for(param in optionalParams){if(optionalParams.hasOwnProperty(param)){url+=qmark+param+"="+optionalParams[param];qmark="";}}}
try{request.onreadystatechange=function(){if(terminated){return;}
try{if(request.readyState===4){var status,statusText,responseText;try{status=request.status;statusText=request.statusText;responseText=request.responseText;}
catch(e1){}
terminated=true;request=null;clutch.timer.clearTimeout(timerId);if(status===0){status=200;}
handler(status,statusText,responseText);}}
catch(e2){throw e2;}};request.open(method,url,true);request.send(optionalBody||null);return function(){if(request){terminated=true;request.abort();request=null;clutch.timer.clearTimeout(timerId);}
handler(-1,"Aborted","Aborted");};}
catch(e){terminated=true;request=null;clutch.timer.clearTimeout(timerId);clutch.timer.setTimeout(handler,0);return function(){};}};if(!this.clutch){clutch={};}
if(!this.clutch.db){clutch.db={};}
clutch.db.fromRow=function(result,columns){if(!result.isValidRow()){result.close();return null;}
var i=0;var length=columns.length;var name=null;var value={};for(i=0;i<length;i+=1){name=columns[i];value[name]=result.fieldByName(name);}
result.close();return value;};clutch.db.fromRows=function(result,columns){if(!result.isValidRow()){result.close();return null;}
var values=[];var i=0;var length=columns.length;var name=null;var value=null;while(result.isValidRow()){value={};values.push(value);for(i=0;i<length;i+=1){name=columns[i];value[name]=result.fieldByName(name);}
result.next();}
result.close();return values;};clutch.db.optionalQuery=function(params){var query="";if(params){if(params.where){query=' WHERE '+params.where;}
if(params.groupBy){query+=' GROUP BY '+params.groupBy;}
if(params.having){query+=' HAVING '+params.having;}
if(params.orderBy){query+=' ORDER BY '+params.orderBy;}
if(params.limit){query+=' LIMIT '+params.limit;if(params.offset){query+=' OFFSET '+params.offset;}}}
return query;};if(!this.clutch){clutch={};}
if(!this.clutch.db){clutch.db={};}
clutch.db.logger=function(name){var columns=['id','name','value'];var db=clutch.createGearsDatabase();db.open(name);db.execute('CREATE TABLE IF NOT EXISTS clutch_logger'+' ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT(256), value TEXT(4096) )');return{log:function(name,value){var result=db.execute('INSERT INTO clutch_logger (name, value) VALUES(?, ?)',[name,value]);result.close();return db.rowsAffected;},get:function(id){var result=db.execute('SELECT id, name, value FROM clutch_logger WHERE id = ?',[id]);return clutch.db.fromRow(result,columns);},list:function(params){var query=clutch.db.optionalQuery(params);var result=db.execute('SELECT id, name, value FROM clutch_logger'+query);return clutch.db.fromRows(result,columns);},remove:function(id){var result=db.execute('DELETE FROM clutch_logger WHERE id = ?',[id]);result.close();return db.rowsAffected;},removeAll:function(){var result=db.execute('DELETE FROM clutch_logger WHERE 1');result.close();return db.rowsAffected;}};};function createStringTests(){return clutch.test.unit('String Tests',{testTrim:function(){var cs=clutch.string;var result=cs.trim(" \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="trimmed","clutch.string.trim()#1 failed \""+result+"\"");result=cs.trim(" \n\t\u00a0still \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="still \n\t\u00a0trimmed","clutch.string.trim()#2 failed \""+result+"\"");},testStartsWith:function(){var cs=clutch.string;var text="startsWith";var result=cs.startsWith(text,"start");this.assert(result,"clutch.string.startsWith()#1 failed");result=cs.startsWith(text,"end");this.assert(result===false,"clutch.string.startsWith()#2 failed");result=cs.startsWith(text,"");this.assert(result,"clutch.string.startsWith()#3 failed");result=cs.startsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.startsWith()#4 failed");},testEndsWith:function(){var cs=clutch.string;var text="endsWith";var result=cs.endsWith(text,"With");this.assert(result,"clutch.string.endsWith()#1 failed");result=cs.endsWith(text,"with");this.assert(result===false,"clutch.string.endsWith()#2 failed");result=cs.endsWith(text,"");this.assert(result,"clutch.string.endsWith()#3 failed");result=cs.endsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.endsWith()#4 failed");},testJsonObject:function(){var cs=clutch.string;var object={a:"hello",b:true,c:3.1,d:new Date(2008,5,25,22,30,1,123)};clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(object);var objectCopy=cs.fromJSON(resultJSON);this.assert(object.a===objectCopy.a,"clutch.string.to/fromJSON object string failed");this.assert(object.b===objectCopy.b,"clutch.string.to/fromJSON object boolean failed");this.assert(object.c===objectCopy.c,"clutch.string.to/fromJSON object numeric failed");this.assert(object.d.getTime()===objectCopy.d.getTime(),"clutch.string.to/fromJSON object Date failed");},testJsonArray:function(){var cs=clutch.string;var array=["hello",true,3.1,new Date(2008,5,25,22,30,1,123)];clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(array);var arrayCopy=cs.fromJSON(resultJSON);this.assert(array[0]===arrayCopy[0],"clutch.string.to/fromJSON array string failed");this.assert(array[1]===arrayCopy[1],"clutch.string.to/fromJSON array boolean failed");this.assert(array[2]===arrayCopy[2],"clutch.string.to/fromJSON array numeric failed");this.assert(array[3].getTime()===arrayCopy[3].getTime(),"clutch.string.to/fromJSON array Date failed");}},1000);}
function runClutchTests(){return createStringTests();}
function createUnitTests(){return clutch.test.unit('Assertion Tests',{clutchTests:[{func:'logTest',callbacks:null},{func:'passTest',callbacks:null},{func:'failTest',callbacks:null},{func:'errorTest',callbacks:null},{func:'assertTest',callbacks:null}],logTest:function(){this.log("Test log message");this.assert(true===true);},passTest:function(){this.pass();this.assert(true===true);},failTest:function(){this.fail("Test fail() call");this.assert(true===false,"assert(false) guaranteed to fail");},errorTest:function(){throw new Error("Test error() call");},assertTest:function(){this.assert(true===true,"assert(true) shouldn't fail");}},1000);}
function runClutchTests(){return createUnitTests();}
function createTimerTests(){return clutch.test.unit('Timer Tests',{clutchTests:[{func:'startSetTimeout',callbacks:['timerSetTimeout']},{func:'startSetInterval',callbacks:['timerSetInterval']}],timerId:null,timerStart:null,startSetTimeout:function(){this.timerId=clutch.timer.setTimeout(this.timerSetTimeout,250);this.timerStart=new Date().getTime();this.assert(this.timerId!==null,"Timer Id is null");},timerSetTimeout:function(){clutch.timer.clearTimeout(this.timerId);var time=new Date().getTime()-this.timerStart;this.assert(time>=(250-25),"Time <= 250 ms ("+time+")");},startSetInterval:function(){this.timerId=clutch.timer.setInterval(this.timerSetInterval,250);this.timerStart=new Date().getTime();this.assert(this.timerId!==null,"Timer Id is null");},timerSetInterval:function(){clutch.timer.clearTimeout(this.timerId);var time=new Date().getTime()-this.timerStart;this.assert(time>=(250-25),"Time <= 250 ms ("+time+")");}},1000);}
function runClutchTests(){return createTimerTests();}
function createXhrTests(){return clutch.test.unit('XHR Tests',{clutchTests:[{func:'validUrl',callbacks:['validUrlHandler']},{func:'invalidUrl',callbacks:['invalidUrlHandler']},{func:'abortedRequest',callbacks:['abortedRequestHandler']}],validUrl:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/xhr-test-data.json',null,null,2000,this.validUrlHandler);this.checkAbort(abort);},validUrlHandler:function(status,statusText,responseText){this.assert(status>=200&&status<=299,"Status not between 200 and 299");},invalidUrl:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,250,this.invalidUrlHandler);this.checkAbort(abort);},invalidUrlHandler:function(status,statusText,responseText){this.assert(status>=400&&status<=499,"Status not between 400 and 499");},abortedRequest:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,2000,this.abortedRequestHandler);this.checkAbort(abort);abort();},abortedRequestHandler:function(status,statusText,responseText){this.assert(status===-1,"Status not -1");this.assert(statusText==='Aborted',"Status text not 'Aborted'");this.assert(responseText==='Aborted',"Response text not 'Aborted'");},checkAbort:function(abort){this.assert(abort!==null,"Returned value is null");this.assert(typeof abort==='function',"Returned value is not a function");}},5000);}
function runClutchTests(){return createXhrTests();}
function runClutchTests(){return clutch.test.group([createUnitTests(),createStringTests(),createTimerTests(),createXhrTests()],8000);}
function createStringTests(){return clutch.test.unit('String Tests',{testTrim:function(){var cs=clutch.string;var result=cs.trim(" \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="trimmed","clutch.string.trim()#1 failed \""+result+"\"");result=cs.trim(" \n\t\u00a0still \n\t\u00a0trimmed \n\t\u00a0");this.assert(result==="still \n\t\u00a0trimmed","clutch.string.trim()#2 failed \""+result+"\"");},testStartsWith:function(){var cs=clutch.string;var text="startsWith";var result=cs.startsWith(text,"start");this.assert(result,"clutch.string.startsWith()#1 failed");result=cs.startsWith(text,"end");this.assert(result===false,"clutch.string.startsWith()#2 failed");result=cs.startsWith(text,"");this.assert(result,"clutch.string.startsWith()#3 failed");result=cs.startsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.startsWith()#4 failed");},testEndsWith:function(){var cs=clutch.string;var text="endsWith";var result=cs.endsWith(text,"With");this.assert(result,"clutch.string.endsWith()#1 failed");result=cs.endsWith(text,"with");this.assert(result===false,"clutch.string.endsWith()#2 failed");result=cs.endsWith(text,"");this.assert(result,"clutch.string.endsWith()#3 failed");result=cs.endsWith(text,"startsWithEndsWith");this.assert(result===false,"clutch.string.endsWith()#4 failed");},testJsonObject:function(){var cs=clutch.string;var object={a:"hello",b:true,c:3.1,d:new Date(2008,5,25,22,30,1,123)};clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(object);var objectCopy=cs.fromJSON(resultJSON);this.assert(object.a===objectCopy.a,"clutch.string.to/fromJSON object string failed");this.assert(object.b===objectCopy.b,"clutch.string.to/fromJSON object boolean failed");this.assert(object.c===objectCopy.c,"clutch.string.to/fromJSON object numeric failed");this.assert(object.d.getTime()===objectCopy.d.getTime(),"clutch.string.to/fromJSON object Date failed");},testJsonArray:function(){var cs=clutch.string;var array=["hello",true,3.1,new Date(2008,5,25,22,30,1,123)];clutch.date.toClutchJSON();if(String.prototype.evalJSON&&typeof String.prototype.evalJSON==='function'){clutch.date.evalJSON();}
var resultJSON=cs.toJSON(array);var arrayCopy=cs.fromJSON(resultJSON);this.assert(array[0]===arrayCopy[0],"clutch.string.to/fromJSON array string failed");this.assert(array[1]===arrayCopy[1],"clutch.string.to/fromJSON array boolean failed");this.assert(array[2]===arrayCopy[2],"clutch.string.to/fromJSON array numeric failed");this.assert(array[3].getTime()===arrayCopy[3].getTime(),"clutch.string.to/fromJSON array Date failed");}},1000);}
function runClutchTests(){return createStringTests();}
function createUnitTests(){return clutch.test.unit('Assertion Tests',{clutchTests:[{func:'logTest',callbacks:null},{func:'passTest',callbacks:null},{func:'failTest',callbacks:null},{func:'errorTest',callbacks:null},{func:'assertTest',callbacks:null}],logTest:function(){this.log("Test log message");this.assert(true===true);},passTest:function(){this.pass();this.assert(true===true);},failTest:function(){this.fail("Test fail() call");this.assert(true===false,"assert(false) guaranteed to fail");},errorTest:function(){throw new Error("Test error() call");},assertTest:function(){this.assert(true===true,"assert(true) shouldn't fail");}},1000);}
function runClutchTests(){return createUnitTests();}
function createTimerTests(){return clutch.test.unit('Timer Tests',{clutchTests:[{func:'startSetTimeout',callbacks:['timerSetTimeout']},{func:'startSetInterval',callbacks:['timerSetInterval']}],timerId:null,timerStart:null,startSetTimeout:function(){this.timerId=clutch.timer.setTimeout(this.timerSetTimeout,250);this.timerStart=new Date().getTime();this.assert(this.timerId!==null,"Timer Id is null");},timerSetTimeout:function(){clutch.timer.clearTimeout(this.timerId);var time=new Date().getTime()-this.timerStart;this.assert(time>=(250-25),"Time <= 250 ms ("+time+")");},startSetInterval:function(){this.timerId=clutch.timer.setInterval(this.timerSetInterval,250);this.timerStart=new Date().getTime();this.assert(this.timerId!==null,"Timer Id is null");},timerSetInterval:function(){clutch.timer.clearTimeout(this.timerId);var time=new Date().getTime()-this.timerStart;this.assert(time>=(250-25),"Time <= 250 ms ("+time+")");}},1000);}
function runClutchTests(){return createTimerTests();}
function createXhrTests(){return clutch.test.unit('XHR Tests',{clutchTests:[{func:'validUrl',callbacks:['validUrlHandler']},{func:'invalidUrl',callbacks:['invalidUrlHandler']},{func:'abortedRequest',callbacks:['abortedRequestHandler']}],validUrl:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/xhr-test-data.json',null,null,2000,this.validUrlHandler);this.checkAbort(abort);},validUrlHandler:function(status,statusText,responseText){this.assert(status>=200&&status<=299,"Status not between 200 and 299");},invalidUrl:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,250,this.invalidUrlHandler);this.checkAbort(abort);},invalidUrlHandler:function(status,statusText,responseText){this.assert(status>=400&&status<=499,"Status not between 400 and 499");},abortedRequest:function(){var abort=clutch.xhr.executeRequest("GET",'/projects/clutch/src/tests/gears/invalid-url.json',null,null,2000,this.abortedRequestHandler);this.checkAbort(abort);abort();},abortedRequestHandler:function(status,statusText,responseText){this.assert(status===-1,"Status not -1");this.assert(statusText==='Aborted',"Status text not 'Aborted'");this.assert(responseText==='Aborted',"Response text not 'Aborted'");},checkAbort:function(abort){this.assert(abort!==null,"Returned value is null");this.assert(typeof abort==='function',"Returned value is not a function");}},5000);}
function runClutchTests(){return createXhrTests();}
function createDatabaseTests(){var logger=null;return clutch.test.unit('Database Tests',{clutchTests:[{func:'clearDatabase',callbacks:null},{func:'addRows',callbacks:null},{func:'readRowsAsc',callbacks:null},{func:'readRowsDesc',callbacks:null},{func:'readRowsLimit',callbacks:null}],setUp:function(){if(logger===null){logger=clutch.db.logger('clutch_gears');}},clearDatabase:function(){logger.removeAll();var rows=logger.list();this.assert(rows===null,"Logger database should have no rows");},addRows:function(){var index=1;var last=10;var rowsAffected=null;for(index=1;index<=last;index+=1){rowsAffected=logger.log("log","test value = "+index);this.assert(rowsAffected===1,"Rows affected by log() !== 1");}},readRowsAsc:function(){var results=logger.list({orderBy:'id ASC'});this.assert(results.length===10,"Should have read 10 rows, but read "+results.length);var index=1;var last=10;var result=null;for(index=1;index<=last;index+=1){result=results[index-1];this.assert(result.value===("test value = "+index),"Row["+index+"].value should have been 'test value = "+index+"', but was '"+result.value+"'");}},readRowsDesc:function(){var results=logger.list({orderBy:'id DESC'});this.assert(results.length===10,"Should have read 10 rows, but read "+results.length);var index=10;var result=null;for(index=10;index>=1;index-=1){result=results[10-index];this.assert(result.value===("test value = "+index),"Row["+(11-index)+"].value should have been 'test value = "+index+"', but was '"+result.value+"'");}},readRowsLimit:function(){var results=logger.list({orderBy:'id ASC',limit:4,offset:2});this.assert(results.length===4,"Should have read 4 rows, but read "+results.length);var index=3;var last=6;var result=null;for(index=3;index<=last;index+=1){result=results[index-3];this.assert(result.value===("test value = "+index),"Row["+index+"].value should have been 'test value = "+index+"', but was '"+result.value+"'");}}},5000);}
function runClutchTests(){return createDatabaseTests();}
function runClutchTests(){return clutch.test.group([createUnitTests(),createStringTests(),createTimerTests(),createXhrTests(),createDatabaseTests()],15000);}
if(!this.JSON){JSON=function(){function f(n){return n<10?'0'+n:n;}
Date.prototype.toJSON=function(key){return this.getUTCFullYear()+'-'+
f(this.getUTCMonth()+1)+'-'+
f(this.getUTCDate())+'T'+
f(this.getUTCHours())+':'+
f(this.getUTCMinutes())+':'+
f(this.getUTCSeconds())+'Z';};var cx=new RegExp("[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g"),escapeable=new RegExp("[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g"),gap,indent,meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},rep;function quote(string){escapeable.lastIndex=0;return escapeable.test(string)?'"'+string.replace(escapeable,function(a){var c=meta[a];if(typeof c==='string'){return c;}
return'\\u'+('0000'+
(+(a.charCodeAt(0))).toString(16)).slice(-4);})+'"':'"'+string+'"';}
function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value==='object'&&typeof value.toJSON==='function'){value=value.toJSON(key);}
if(typeof rep==='function'){value=rep.call(holder,key,value);}
switch(typeof value){case'string':return quote(value);case'number':return isFinite(value)?String(value):'null';case'boolean':case'null':return String(value);case'object':if(!value){return'null';}
gap+=indent;partial=[];if(typeof value.length==='number'&&!(value.propertyIsEnumerable('length'))){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||'null';}
v=partial.length===0?'[]':gap?'[\n'+gap+
partial.join(',\n'+gap)+'\n'+
mind+']':'['+partial.join(',')+']';gap=mind;return v;}
if(rep&&typeof rep==='object'){length=rep.length;for(i=0;i<length;i+=1){k=rep[i];if(typeof k==='string'){v=str(k,value,rep);if(v){partial.push(quote(k)+(gap?': ':':')+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value,rep);if(v){partial.push(quote(k)+(gap?': ':':')+v);}}}}
v=partial.length===0?'{}':gap?'{\n'+gap+partial.join(',\n'+gap)+'\n'+
mind+'}':'{'+partial.join(',')+'}';gap=mind;return v;}}
return{stringify:function(value,replacer,space){var i;gap='';indent='';if(typeof space==='number'){for(i=0;i<space;i+=1){indent+=' ';}}else if(typeof space==='string'){indent=space;}
rep=replacer;if(replacer&&typeof replacer!=='function'&&(typeof replacer!=='object'||typeof replacer.length!=='number')){throw new Error('JSON.stringify');}
return str('',{'':value});},parse:function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&&typeof value==='object'){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}
return reviver.call(holder,key,value);}
cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return'\\u'+('0000'+
(+(a.charCodeAt(0))).toString(16)).slice(-4);});}
if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,''))){j=new Function('return ('+text+');')();return typeof reviver==='function'?walk({'':j},''):j;}
throw new SyntaxError('JSON.parse');}};}();}
if(!this.clutch){clutch={};}
if(!this.clutch.test){clutch.test={};}
clutch.test.utils={createTotaliser:function(){return{complete:false,tests:0,logs:0,failures:0,errors:0,time:0,abend:null,messages:[]};},sumTotaliser:function(from,to){to.tests+=from.tests;to.logs+=from.logs;to.failures+=from.failures;to.errors+=from.errors;to.time+=from.time;},addTotaliserProperties:function(totaliser,name,testObject,func,callback,callbacks){totaliser.name=name;totaliser.testObject=testObject;totaliser.func=func;totaliser.callback=callback;totaliser.callbacks=callbacks;},removeTotaliserProperties:function(totaliser){delete totaliser.complete;delete totaliser.name;delete totaliser.testObject;delete totaliser.callbacks;},createProfile:function(){return{complete:false,index:0,total:0,abend:null,tests:[]};}};clutch.test.assertions=function(totaliser){return{log:function(message){totaliser.logs+=1;totaliser.messages.push({type:'log',message:message});},pass:function(){totaliser.tests+=1;},fail:function(message){totaliser.tests+=1;totaliser.failures+=1;totaliser.messages.push({type:"fail",message:message});},error:function(error){totaliser.tests+=1;totaliser.errors+=1;var message=error.name+': '+error.message;if(error.filename&&error.lineNumber&&error.stack){message=error.filename+'('+error.lineNumber+') '+message+'\n'+error.stack;}
else if(error.filename&&error.lineNumber){message=error.filename+'('+error.lineNumber+') '+message;}
totaliser.messages.push({type:"error",message:message});},assert:function(condition,message){try{if(condition){this.pass();}
else{message=message||"assert: "+condition;this.fail(message);}}
catch(e){this.error(e);}}};};clutch.test.runner=function(profile,timeout){var gearsTimer=null;var timerId=null;var setTestTimeout=null;var clearTestTimeout=null;var functionAssertions=null;var callbackAssertions=null;var callbacks=null;function cleanUp(){var i=0;var total=profile.total;var removeProps=clutch.test.utils.removeTotaliserProperties;for(;i<total;i+=1){removeProps(profile.tests[i]);}}
function abend(reason){if(timerId){clearTestTimeout(timerId);}
reason=reason||"Terminated by User";profile.abend=reason;var i=profile.index;var total=profile.total;for(;i<total;i+=1){profile.tests[i].abend=reason;}
cleanUp();profile.index=profile.total;profile.complete=true;}
function injectAssertions(testObject,assertions){var prop=null;for(prop in assertions){if(assertions.hasOwnProperty(prop)){testObject[prop]=assertions[prop];}}}
function wrapCallback(testObject,callbackFunc,func,callbackIndex,index){return function(){var test=profile.tests[index];injectAssertions(testObject,callbackAssertions);test.func=callbackFunc+" <- "+func;test.callback=callbackFunc;var startAt=new Date().getTime();try{try{startAt=new Date().getTime();callbacks[callbackIndex].apply(testObject,arguments);}
finally{test.time+=(new Date().getTime()-startAt);}}
catch(e1){testObject.error(e1);try{testObject.tearDown();}
catch(e2){testObject.error(e2);}}
injectAssertions(testObject,functionAssertions);test.complete=true;};}
function testFunctionAndCallbacks(test,next){var testObject=test.testObject;var callback=null;var length=test.callbacks.length;var i=0;var index=profile.index+1;callbackAssertions=clutch.test.assertions(profile.tests[index]);callbacks=[];for(;i<length;i+=1){callback=test.callbacks[i];callbacks.push(testObject[callback]);testObject[callback]=wrapCallback(testObject,callback,test.func,i,index);}
function waitForCallback(){if(profile.complete){return;}
var testFunction=profile.tests[profile.index];var testCallback=profile.tests[profile.index+1];if(testCallback.complete){var testObject=testFunction.testObject;var length=testFunction.callbacks.length;var i=0;for(;i<length;i+=1){testObject[testFunction.callbacks[i]]=callbacks[i];}
profile.index+=2;setTestTimeout(next,0);}
else{setTestTimeout(waitForCallback,100);}}
var startAt=new Date().getTime();try{try{testObject.setUp();startAt=new Date().getTime();testObject[test.func]();}
finally{test.time+=(new Date().getTime()-startAt);}}
catch(e1){testObject.error(e1);try{testObject.tearDown();}
catch(e2){testObject.error(e2);}}
setTestTimeout(waitForCallback,100);}
function testFunction(test,next){var testObject=test.testObject;var startAt=new Date().getTime();try{try{testObject.setUp();startAt=new Date().getTime();testObject[test.func]();}
finally{test.time+=(new Date().getTime()-startAt);testObject.tearDown();}}
catch(e1){testObject.error(e1);}
profile.index+=1;setTestTimeout(next,0);}
function next(){if(profile.index>=profile.total){if(timerId){clearTestTimeout(timerId);}
cleanUp();profile.complete=true;return;}
var test=profile.tests[profile.index];var testObject=test.testObject;functionAssertions=clutch.test.assertions(test);injectAssertions(testObject,functionAssertions);if(test.callbacks){testFunctionAndCallbacks(test,next);}
else{testFunction(test,next);}}
function timedOut(){abend("Testing timeout ("+timeout+" ms) expired");}
return{run:function(){if(this.window&&window.setTimeout){setTestTimeout=function(code,millis){return window.setTimeout(code,millis);};clearTestTimeout=function(timerId){window.clearTimeout(timerId);};}
else{gearsTimer=clutch.createGearsTimer();setTestTimeout=function(code,millis){return gearsTimer.setTimeout(code,millis);};clearTestTimeout=function(timerId){gearsTimer.clearTimeout(timerId);};}
profile.complete=false;profile.index=0;profile.total=profile.tests.length;if(timeout>0){timerId=setTestTimeout(timedOut,timeout);}
setTestTimeout(next,0);},abort:function(reason){abend(reason);},check:function(){return{complete:profile.complete,abend:profile.abend,index:profile.index,total:profile.total};}};};clutch.test.unit=function(name,testObject,timeout){var utils=clutch.test.utils;var profile=null;var tests=[];var runner=null;return{prepare:function(parentProfile){if(parentProfile){profile=parentProfile;}
else{profile=utils.createProfile();}
var i=null;var length=null;var testArray=null;var test=null;var prop=null;var totaliser=null;if(testObject.clutchTests){testArray=testObject.clutchTests;length=testArray.length;for(i=0;i<length;i+=1){test=testArray[i];totaliser=utils.createTotaliser();utils.addTotaliserProperties(totaliser,name,testObject,test.func,null,test.callbacks);profile.tests.push(totaliser);tests.push(totaliser);if(totaliser.callbacks){totaliser=utils.createTotaliser();utils.addTotaliserProperties(totaliser,name,testObject,'callback <- '+test.func,null,null);profile.tests.push(totaliser);tests.push(totaliser);}}}
else{for(prop in testObject){if(testObject.hasOwnProperty(prop)&&typeof testObject[prop]==='function'&&prop.indexOf("test")===0){totaliser=utils.createTotaliser();utils.addTotaliserProperties(totaliser,name,testObject,prop,null,null);profile.tests.push(totaliser);tests.push(totaliser);}}}
if(!testObject.setUp){testObject.setUp=function(){};}
if(!testObject.tearDown){testObject.tearDown=function(){};}},run:function(){if(!profile){this.prepare();}
runner=clutch.test.runner(profile,timeout);runner.run();},abort:function(){runner.abort();},check:function(){return runner.check();},summarise:function(){var results=[];var total=utils.createTotaliser();var length=tests.length;var test=null;var i=null;for(i=0;i<length;i+=1){test=tests[i];utils.sumTotaliser(test,total);results.push({name:test.func,summary:test});}
utils.removeTotaliserProperties(total);return{name:name,abend:profile.abend,summary:total,tests:results};}};};clutch.test.group=function(arrayOfUnitTests,timeout){var utils=clutch.test.utils;var profile=null;var runner=null;return{prepare:function(){profile=utils.createProfile();var length=arrayOfUnitTests.length;var unitTest=null;var i=null;for(i=0;i<length;i+=1){unitTest=arrayOfUnitTests[i];unitTest.prepare(profile);}},run:function(){if(!profile){this.prepare();}
runner=clutch.test.runner(profile,timeout);runner.run();},abort:function(){runner.abort();},check:function(){return runner.check();},summarise:function(){var total=utils.createTotaliser();var results=[];var length=arrayOfUnitTests.length;var unitTest=null;var unitSummary=null;var i=null;for(i=0;i<length;i+=1){unitTest=arrayOfUnitTests[i];unitSummary=unitTest.summarise();utils.sumTotaliser(unitSummary.summary,total);results.push(unitSummary);}
utils.removeTotaliserProperties(total);return{abend:profile.abend,summary:total,tests:results};}};};if(!this.clutch){clutch={};}
if(!this.clutch.wp){clutch.wp={};}
clutch.wp.handlers={'default':function(message){throw new Error("No message handler for '"+message.body.command+"'");}};clutch.wp.onMessage=function(depr1,depr2,message){var body=message.body;var handler=clutch.wp.handlers[body.command]||clutch.wp.handlers['default'];handler(message);};(function(){var wp=google.gears.workerPool;var tests=runClutchTests();clutch.wp.handlers['clutch.test.run']=function(message){tests.run();wp.sendMessage({command:'clutch.test.status',status:tests.check()},message.sender);};clutch.wp.handlers['clutch.test.status']=function(message){var status=tests.check();var summary=null;if(status.complete){summary=tests.summarise();}
wp.sendMessage({command:'clutch.test.status',status:status,summary:summary},message.sender);};wp.onmessage=clutch.wp.onMessage;})();